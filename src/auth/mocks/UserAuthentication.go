// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/VendettA01/e3w/auth (interfaces: UserAuthentication)

// Package mock_auth is a generated GoMock package.
package mock_auth

import (
	auth "github.com/VendettA01/e3w/auth"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUserAuthentication is a mock of UserAuthentication interface
type MockUserAuthentication struct {
	ctrl     *gomock.Controller
	recorder *MockUserAuthenticationMockRecorder
}

// MockUserAuthenticationMockRecorder is the mock recorder for MockUserAuthentication
type MockUserAuthenticationMockRecorder struct {
	mock *MockUserAuthentication
}

// NewMockUserAuthentication creates a new mock instance
func NewMockUserAuthentication(ctrl *gomock.Controller) *MockUserAuthentication {
	mock := &MockUserAuthentication{ctrl: ctrl}
	mock.recorder = &MockUserAuthenticationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUserAuthentication) EXPECT() *MockUserAuthenticationMockRecorder {
	return m.recorder
}

// GetName mocks base method
func (m *MockUserAuthentication) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName
func (mr *MockUserAuthenticationMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockUserAuthentication)(nil).GetName))
}

// TestConfig mocks base method
func (m *MockUserAuthentication) TestConfig() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TestConfig")
	ret0, _ := ret[0].(error)
	return ret0
}

// TestConfig indicates an expected call of TestConfig
func (mr *MockUserAuthenticationMockRecorder) TestConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TestConfig", reflect.TypeOf((*MockUserAuthentication)(nil).TestConfig))
}

// login mocks base method
func (m *MockUserAuthentication) login(arg0 auth.UserCredentials) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "login", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// login indicates an expected call of login
func (mr *MockUserAuthenticationMockRecorder) login(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "login", reflect.TypeOf((*MockUserAuthentication)(nil).login), arg0)
}
